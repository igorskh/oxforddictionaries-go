/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.5.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oxforddictionaries

import (
	"encoding/json"
)

// RetrieveTranslations Schema for the 'translations' endpoints
type RetrieveTranslations struct {
	// Additional Information provided by OUP
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// A list of bilingual entries and all the data related to them
	Results *[]BilingualHeadwordEntry `json:"results,omitempty"`
}

// NewRetrieveTranslations instantiates a new RetrieveTranslations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveTranslations() *RetrieveTranslations {
	this := RetrieveTranslations{}
	return &this
}

// NewRetrieveTranslationsWithDefaults instantiates a new RetrieveTranslations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveTranslationsWithDefaults() *RetrieveTranslations {
	this := RetrieveTranslations{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RetrieveTranslations) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveTranslations) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RetrieveTranslations) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *RetrieveTranslations) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *RetrieveTranslations) GetResults() []BilingualHeadwordEntry {
	if o == nil || o.Results == nil {
		var ret []BilingualHeadwordEntry
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveTranslations) GetResultsOk() (*[]BilingualHeadwordEntry, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *RetrieveTranslations) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []BilingualHeadwordEntry and assigns it to the Results field.
func (o *RetrieveTranslations) SetResults(v []BilingualHeadwordEntry) {
	o.Results = &v
}

func (o RetrieveTranslations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableRetrieveTranslations struct {
	value *RetrieveTranslations
	isSet bool
}

func (v NullableRetrieveTranslations) Get() *RetrieveTranslations {
	return v.value
}

func (v *NullableRetrieveTranslations) Set(val *RetrieveTranslations) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveTranslations) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveTranslations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveTranslations(val *RetrieveTranslations) *NullableRetrieveTranslations {
	return &NullableRetrieveTranslations{value: val, isSet: true}
}

func (v NullableRetrieveTranslations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveTranslations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


