/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.5.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oxforddictionaries

import (
	"encoding/json"
)

// SenseLink Link to a sense
type SenseLink struct {
	// identifier of a word
	EntryId string `json:"entry_id"`
	// identifier of a sense
	SenseId string `json:"sense_id"`
}

// NewSenseLink instantiates a new SenseLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSenseLink(entryId string, senseId string) *SenseLink {
	this := SenseLink{}
	this.EntryId = entryId
	this.SenseId = senseId
	return &this
}

// NewSenseLinkWithDefaults instantiates a new SenseLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSenseLinkWithDefaults() *SenseLink {
	this := SenseLink{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *SenseLink) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *SenseLink) GetEntryIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *SenseLink) SetEntryId(v string) {
	o.EntryId = v
}

// GetSenseId returns the SenseId field value
func (o *SenseLink) GetSenseId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenseId
}

// GetSenseIdOk returns a tuple with the SenseId field value
// and a boolean to check if the value has been set.
func (o *SenseLink) GetSenseIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SenseId, true
}

// SetSenseId sets field value
func (o *SenseLink) SetSenseId(v string) {
	o.SenseId = v
}

func (o SenseLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry_id"] = o.EntryId
	}
	if true {
		toSerialize["sense_id"] = o.SenseId
	}
	return json.Marshal(toSerialize)
}

type NullableSenseLink struct {
	value *SenseLink
	isSet bool
}

func (v NullableSenseLink) Get() *SenseLink {
	return v.value
}

func (v *NullableSenseLink) Set(val *SenseLink) {
	v.value = val
	v.isSet = true
}

func (v NullableSenseLink) IsSet() bool {
	return v.isSet
}

func (v *NullableSenseLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSenseLink(val *SenseLink) *NullableSenseLink {
	return &NullableSenseLink{value: val, isSet: true}
}

func (v NullableSenseLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSenseLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


