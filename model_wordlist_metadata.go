/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.5.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oxforddictionaries

import (
	"encoding/json"
)

// WordlistMetadata Additional Information provided by OUP
type WordlistMetadata struct {
	// Approximate number of results that match the given query.
	Total *string `json:"total,omitempty"`
}

// NewWordlistMetadata instantiates a new WordlistMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWordlistMetadata() *WordlistMetadata {
	this := WordlistMetadata{}
	return &this
}

// NewWordlistMetadataWithDefaults instantiates a new WordlistMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWordlistMetadataWithDefaults() *WordlistMetadata {
	this := WordlistMetadata{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *WordlistMetadata) GetTotal() string {
	if o == nil || o.Total == nil {
		var ret string
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WordlistMetadata) GetTotalOk() (*string, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *WordlistMetadata) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given string and assigns it to the Total field.
func (o *WordlistMetadata) SetTotal(v string) {
	o.Total = &v
}

func (o WordlistMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableWordlistMetadata struct {
	value *WordlistMetadata
	isSet bool
}

func (v NullableWordlistMetadata) Get() *WordlistMetadata {
	return v.value
}

func (v *NullableWordlistMetadata) Set(val *WordlistMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableWordlistMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableWordlistMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWordlistMetadata(val *WordlistMetadata) *NullableWordlistMetadata {
	return &NullableWordlistMetadata{value: val, isSet: true}
}

func (v NullableWordlistMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWordlistMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


